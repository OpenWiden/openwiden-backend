# Generated by Django 3.0.5 on 2020-05-09 14:17

import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
from django.contrib.postgres.operations import HStoreExtension
from django.db import migrations, models
import django.db.models.deletion
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
    ]

    operations = [
        HStoreExtension(),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('remote_id', models.PositiveIntegerField(verbose_name='remote issue id')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('state', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], max_length=30, verbose_name='state')),
                ('labels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, null=True, size=None, verbose_name='labels')),
                ('url', models.URLField(verbose_name='url')),
                ('created_at', models.DateTimeField(verbose_name='crated at')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='closed at')),
                ('updated_at', models.DateTimeField(verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'issue',
                'verbose_name_plural': 'issues',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version_control_service', models.CharField(choices=[('github', 'GitHub'), ('gitlab', 'Gitlab')], max_length=50, verbose_name='version control service')),
                ('remote_id', models.PositiveIntegerField(verbose_name='remote repository id')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('url', models.URLField(verbose_name='url')),
                ('stars_count', models.PositiveIntegerField(default=0, verbose_name='stars count')),
                ('open_issues_count', models.PositiveSmallIntegerField(default=0, verbose_name='open issues count')),
                ('forks_count', models.PositiveSmallIntegerField(default=0, verbose_name='forks count')),
                ('created_at', models.DateTimeField(verbose_name='created at')),
                ('updated_at', models.DateTimeField(verbose_name='updated at')),
                ('programming_languages', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True, verbose_name='programming languages')),
                ('visibility', models.CharField(choices=[('public', 'public'), ('private', 'private'), ('internal', 'internal')], max_length=8, verbose_name='visibility')),
                ('is_added', models.BooleanField(default=False, verbose_name='is added')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='repositories', related_query_name='repository', to='organizations.Organization', verbose_name='organization')),
            ],
            options={
                'verbose_name': 'repository',
                'verbose_name_plural': 'repositories',
                'ordering': ('-open_issues_count',),
            },
        ),
    ]
