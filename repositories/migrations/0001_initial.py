# Generated by Django 3.0.2 on 2020-03-07 17:31

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VersionControlService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('url', models.URLField(verbose_name='url')),
            ],
            options={
                'verbose_name': 'version control service',
                'verbose_name_plural': 'version control services',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('remote_id', models.PositiveIntegerField(verbose_name='remote repository id')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('url', models.URLField(verbose_name='url')),
                ('forks_count', models.PositiveSmallIntegerField(default=0, verbose_name='forks count')),
                ('star_count', models.PositiveIntegerField(default=0, verbose_name='star count')),
                ('created_at', models.DateTimeField(verbose_name='created at')),
                ('updated_at', models.DateTimeField(verbose_name='updated at')),
                ('open_issues_count', models.PositiveSmallIntegerField(default=0, verbose_name='open issues count')),
                ('version_control_service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='repositories', to='repositories.VersionControlService', verbose_name='version control service')),
            ],
            options={
                'verbose_name': 'repository',
                'verbose_name_plural': 'repositories',
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('remote_id', models.PositiveIntegerField(verbose_name='remote issue id')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('state', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], max_length=30, verbose_name='state')),
                ('labels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50, verbose_name='label'), size=None)),
                ('url', models.URLField(verbose_name='url')),
                ('created_at', models.DateTimeField(verbose_name='crated at')),
                ('closed_at', models.DateTimeField(blank=True, verbose_name='closed at')),
                ('updated_at', models.DateTimeField(verbose_name='updated at')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', related_query_name='issue', to='repositories.Repository', verbose_name='repository')),
            ],
            options={
                'verbose_name': 'issue',
                'verbose_name_plural': 'issues',
            },
        ),
        migrations.AddConstraint(
            model_name='repository',
            constraint=models.UniqueConstraint(fields=('version_control_service', 'remote_id'), name='unique_repository'),
        ),
        migrations.AddConstraint(
            model_name='issue',
            constraint=models.UniqueConstraint(fields=('repository', 'remote_id'), name='unique_issue'),
        ),
    ]
